{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-03-image-finder/src/components/ImageInfo/ImageInfo.jsx\";\nimport { Component } from 'react';\nimport fetchImage from '../../services/image-api';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected'\n};\nexport default class ImageInfo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      image: null,\n      error: null,\n      status: Status.IDLE\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.imageName;\n    const nextName = this.props.ImageName;\n\n    if (prevName !== nextName) {\n      this.setState({\n        status: Status.PENDING\n      });\n    }\n\n    fetchImage(nextName).then(hits => this.setState({\n      hits,\n      status: Status.RESOLVED\n    })).catch(error => this.setState({\n      status: Status.REJECTED\n    }));\n  }\n\n  render() {\n    const {\n      image,\n      error,\n      status\n    } = this.state;\n    const {\n      imageName\n    } = this.props;\n\n    if (status === 'idle') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Enter text $\", imageName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (status === 'pending') {\n      return /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n        imageName: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    } // if (status === 'rejected') { \n    //     return <ErrorView message={error.message} />\n    // }\n    // if (status === 'resolved') {\n    //     return <DataView image={image}/>\n    // }\n\n  }\n\n}","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-03-image-finder/src/components/ImageInfo/ImageInfo.jsx"],"names":["Component","fetchImage","ImageGalleryItem","Status","IDLE","PENDING","RESOLVED","REJECTED","ImageInfo","state","image","error","status","componentDidUpdate","prevProps","prevState","prevName","imageName","nextName","props","ImageName","setState","then","hits","catch","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE,MADK;AAEXC,EAAAA,OAAO,EAAE,SAFE;AAGXC,EAAAA,QAAQ,EAAE,UAHC;AAIXC,EAAAA,QAAQ,EAAE;AAJC,CAAf;AAOA,eAAe,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC7CS,KAD6C,GACrC;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,MAAM,EAAET,MAAM,CAACC;AAHX,KADqC;AAAA;;AAO7CS,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,UAAMC,QAAQ,GAAGF,SAAS,CAACG,SAA3B;AACA,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,SAA5B;;AAEA,QAAIJ,QAAQ,KAAKE,QAAjB,EAA2B;AACvB,WAAKG,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAET,MAAM,CAACE;AAAjB,OAAd;AACH;;AAEDJ,IAAAA,UAAU,CAACiB,QAAD,CAAV,CACKI,IADL,CACUC,IAAI,IAAI,KAAKF,QAAL,CAAc;AAAEE,MAAAA,IAAF;AAAQX,MAAAA,MAAM,EAAET,MAAM,CAACG;AAAvB,KAAd,CADlB,EAEKkB,KAFL,CAEWb,KAAK,IAAI,KAAKU,QAAL,CAAc;AAAET,MAAAA,MAAM,EAAET,MAAM,CAACI;AAAjB,KAAd,CAFpB;AAGH;;AAEDkB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEf,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,QAA2B,KAAKH,KAAtC;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAgB,KAAKE,KAA3B;;AAEA,QAAIP,MAAM,KAAK,MAAf,EAAuB;AACnB,0BAAO;AAAA,mCAAkBK,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,QAAIL,MAAM,KAAK,SAAf,EAA0B;AACtB,0BAAO,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAVI,CAYL;AACA;AACA;AAEA;AACA;AACA;;AACH;;AAvC4C","sourcesContent":["import { Component } from 'react';\nimport fetchImage from '../../services/image-api';\nimport ImageGalleryItem from '../ImageGalleryItem'\n\nconst Status = {\n    IDLE: 'idle',\n    PENDING: 'pending',\n    RESOLVED: 'resolved',\n    REJECTED: 'rejected',\n}\n\nexport default class ImageInfo extends Component {\n    state = {\n        image: null,\n        error: null,\n        status: Status.IDLE\n    }\n\n    componentDidUpdate(prevProps, prevState) { \n        const prevName = prevProps.imageName;\n        const nextName = this.props.ImageName;\n\n        if (prevName !== nextName) {\n            this.setState({ status: Status.PENDING });\n        }\n\n        fetchImage(nextName)\n            .then(hits => this.setState({ hits, status: Status.RESOLVED }))\n            .catch(error => this.setState({ status: Status.REJECTED }))\n    }\n\n    render() { \n        const { image, error, status } = this.state;\n        const { imageName } = this.props;\n\n        if (status === 'idle') {\n            return <div>Enter text ${imageName}</div>\n        }\n\n        if (status === 'pending') {\n            return <ImageGalleryItem imageName={image} />\n        }\n\n        // if (status === 'rejected') { \n        //     return <ErrorView message={error.message} />\n        // }\n\n        // if (status === 'resolved') {\n        //     return <DataView image={image}/>\n        // }\n    }\n}"]},"metadata":{},"sourceType":"module"}
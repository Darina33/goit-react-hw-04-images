{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-03-image-finder/src/components/ImageInfo/ImageInfo.jsx\";\nimport { Component } from 'react';\nimport ImageGallery from '../ImageGallery';\nimport Loader from 'components/Loader';\nimport Button from 'components/Button';\nimport fetchImages from '../../services/image-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet page = 1;\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected'\n};\nexport default class ImageInfo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      image: null,\n      error: null,\n      status: Status.IDLE\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.imageName;\n    const nextName = this.props.imageName;\n\n    if (prevName !== nextName) {\n      this.setState({\n        status: Status.PENDING\n      });\n      fetchImages(nextName).then(image => this.setState({\n        image: image.hits,\n        status: Status.RESOLVED\n      }));\n    }\n  }\n\n  onNextPage() {\n    const nextName = this.props.imageName;\n    this.setState({\n      status: Status.PENDING\n    });\n    page += 1;\n    fetch(`https://pixabay.com/api/?q=${nextName}&page=${page}&key=35592946-b30e38cecc5f402f2c111ab69&image_type=photo&orientation=horizontal&per_page=12`).then(res => res.json()).then(image => this.setState(prevState => ({\n      image: [...prevState.image, ...image.hits],\n      status: Status.RESOLVED\n    })));\n  } //     const getImages = async () => {\n  //     setLoading(true);\n  //     try {\n  //       const { hits } = await fetchImages(searchQuery, currentPage);\n  //       setImages(prev => [...prev, ...hits]);\n  //       setPage(prevPage => prevPage + 1);\n  //     } catch (error) {\n  //       console.log('Smth wrong with App fetch', error);\n  //       setError({ error });\n  //     } finally {\n  //       setLoading(false);\n  //     }\n  //   };\n\n\n  render() {\n    const {\n      image,\n      error,\n      status\n    } = this.state;\n    const {\n      imageName\n    } = this.props;\n\n    if (status === 'idle') {\n      return;\n    }\n\n    if (status === 'pending') {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (status === 'rejected') {\n      return alert(error);\n    }\n\n    if (status === 'resolved') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ImageGallery, {\n          images: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.onNextPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-03-image-finder/src/components/ImageInfo/ImageInfo.jsx"],"names":["Component","ImageGallery","Loader","Button","fetchImages","page","Status","IDLE","PENDING","RESOLVED","REJECTED","ImageInfo","state","image","error","status","componentDidUpdate","prevProps","prevState","prevName","imageName","nextName","props","setState","then","hits","onNextPage","fetch","res","json","render","alert"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport ImageGallery from '../ImageGallery'\nimport Loader from 'components/Loader';\nimport Button from 'components/Button';\n\nimport fetchImages from '../../services/image-api';\n\nlet page = 1;\n\nconst Status = {\n    IDLE: 'idle',\n    PENDING: 'pending',\n    RESOLVED: 'resolved',\n    REJECTED: 'rejected',\n}\n\nexport default class ImageInfo extends Component {\n    state = {\n        image: null,\n        error: null,\n        status: Status.IDLE\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const prevName = prevProps.imageName;\n        const nextName = this.props.imageName;\n\n        if (prevName !== nextName) {\n\n            this.setState({ status: Status.PENDING });\n\n            fetchImages(nextName)\n                .then(image => this.setState({ image: image.hits, status: Status.RESOLVED }))\n        }\n    }\n\n    onNextPage() {\n        const nextName = this.props.imageName;\n\n        this.setState({ status: Status.PENDING });\n        page += 1;\n\n            fetch(`https://pixabay.com/api/?q=${nextName}&page=${page}&key=35592946-b30e38cecc5f402f2c111ab69&image_type=photo&orientation=horizontal&per_page=12`).then(res => res.json())\n                .then(image => this.setState(prevState => ({ image: [...prevState.image, ...image.hits], status: Status.RESOLVED })))\n    }\n\n//     const getImages = async () => {\n//     setLoading(true);\n\n//     try {\n//       const { hits } = await fetchImages(searchQuery, currentPage);\n\n//       setImages(prev => [...prev, ...hits]);\n\n//       setPage(prevPage => prevPage + 1);\n        \n//     } catch (error) {\n//       console.log('Smth wrong with App fetch', error);\n//       setError({ error });\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n    render() { \n        const { image, error, status } = this.state;\n        const { imageName } = this.props\n\n        if (status === 'idle') {\n            return \n        }\n\n        if (status === 'pending') {\n            return <Loader/>\n        }\n\n        if (status === 'rejected') { \n            return alert(error)\n        }\n\n        if (status === 'resolved') {\n            return (\n                <div><ImageGallery images={image} />\n                {(\n            <Button onClick={this.onNextPage} />\n          )}</div>)\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}
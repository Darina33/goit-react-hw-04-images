{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-04-images/src/components/App.jsx\";\nimport { Component } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Searchbar from \"./Searchbar\";\nimport ImageGallery from \"./ImageGallery\";\nimport fetchImages from '../services/image-api';\nimport Loader from \"./Loader\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      page: 1,\n      query: '',\n      images: [],\n      isLoading: false,\n      isError: false,\n      isLoadMore: false\n    };\n\n    this.onHandleSubmit = query => {\n      if (this.state.query === query) {\n        return;\n      }\n\n      this.setState({\n        query,\n        page: 1,\n        images: [],\n        isLoading: true,\n        isLoadMore: false\n      });\n    };\n\n    this.LoadMoreButton = () => {\n      this.setState(prevState => ({\n        page: prevState.page + 1\n      }));\n    };\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const perPage = 12;\n\n    try {\n      if (prevState.query !== this.state.query || prevState.page !== this.state.page) {\n        const data = await fetchImages(this.state.query, this.state.page);\n\n        if (data.hits.length === 0) {\n          Notify.warning('Sorry, there are no images matching your search query');\n          this.setState({\n            isLoading: false\n          });\n          return;\n        }\n\n        this.setState(prevState => ({\n          images: [...prevState.images, ...data.hits],\n          isLoading: false\n        }));\n        let totalPage = data.totalHits / perPage;\n\n        if (totalPage > 1) {\n          this.setState({\n            isLoadMore: true\n          });\n        }\n\n        if (this.state.page > totalPage) {\n          this.setState({\n            isLoadMore: false\n          });\n        }\n      }\n    } catch (error) {\n      this.setState({\n        isError: true,\n        isLoading: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      images,\n      isLoading,\n      isLoadMore\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.onHandleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), isLoadMore && /*#__PURE__*/_jsxDEV(Button, {\n        LoadMoreButton: this.LoadMoreButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-04-images/src/components/App.jsx"],"names":["Component","Notify","Searchbar","ImageGallery","fetchImages","Loader","Button","App","state","page","query","images","isLoading","isError","isLoadMore","onHandleSubmit","setState","LoadMoreButton","prevState","componentDidUpdate","prevProps","perPage","data","hits","length","warning","totalPage","totalHits","error","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport Searchbar from \"./Searchbar\";\nimport ImageGallery from \"./ImageGallery\";\nimport fetchImages from '../services/image-api';\nimport Loader from \"./Loader\";\nimport Button from \"./Button\";\n\nexport class App extends Component {\n  state = {\n    page: 1,\n    query: '',\n    images: [],\n    isLoading: false,\n    isError: false,\n    isLoadMore: false,\n  };\n\n  onHandleSubmit = query => {\n    if (this.state.query === query) {\n      return;\n    }\n    this.setState({\n      query,\n      page: 1,\n      images: [],\n      isLoading: true,\n      isLoadMore: false,\n    });\n  };\n\n  LoadMoreButton = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const perPage = 12;\n    try {\n      if (\n        prevState.query !== this.state.query ||\n        prevState.page !== this.state.page\n      ) {\n        const data = await fetchImages(this.state.query, this.state.page);\n\n        if (data.hits.length === 0) {\n          Notify.warning(\n            'Sorry, there are no images matching your search query'\n          );\n          this.setState({ isLoading: false });\n          return;\n        }\n\n        this.setState(prevState => ({\n          images: [...prevState.images, ...data.hits],\n          isLoading: false,\n        }));\n\n        let totalPage = data.totalHits / perPage;\n\n        if (totalPage > 1) {\n          this.setState({ isLoadMore: true });\n        }\n\n        if (this.state.page > totalPage) {\n          this.setState({ isLoadMore: false });\n        }\n      }\n    } catch (error) {\n      this.setState({ isError: true, isLoading: false });\n    }\n  }\n\n  render() {\n    const { images, isLoading, isLoadMore } = this.state;\n    return (<div>\n        <Searchbar onSubmit={this.onHandleSubmit} />\n        {isLoading && <Loader/>}\n        <ImageGallery images={images} />\n        {isLoadMore && (\n          <Button LoadMoreButton={this.LoadMoreButton} />\n        )}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}
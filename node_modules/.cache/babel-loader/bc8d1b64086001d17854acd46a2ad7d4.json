{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-04-images/src/components/ImageGalleryItem/ImageGalleryItem.jsx\";\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'components/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class ImageGalleryItem extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isShowModal: false\n    };\n\n    this.toogleModal = () => {\n      this.setState(prevState => ({\n        isShowModal: !prevState.isShowModal\n      }));\n    };\n\n    this.handleBackdropClick = e => {\n      if (e.currentTarget === e.target) {\n        this.setState({\n          isShowModal: false\n        });\n      }\n    };\n\n    this.handleClickImage = () => {\n      this.setState({\n        isShowModal: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      webformatURL,\n      tags,\n      largeImageURL\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ImageGalleryItem\",\n        onClick: this.toogleModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"ImageGalleryItem-image\",\n          src: webformatURL,\n          alt: tags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), this.state.isShowModal && /*#__PURE__*/_jsxDEV(Modal, {\n        tags: tags,\n        largeImageURL: largeImageURL,\n        handleBackdropClick: this.handleBackdropClick,\n        onCloseModal: this.toogleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-04-images/src/components/ImageGalleryItem/ImageGalleryItem.jsx"],"names":["Component","PropTypes","Modal","ImageGalleryItem","state","isShowModal","toogleModal","setState","prevState","handleBackdropClick","e","currentTarget","target","handleClickImage","render","webformatURL","tags","largeImageURL","props","propTypes","string","isRequired"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;;;AAEA,eAAe,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACtDI,KADsD,GAC9C;AACNC,MAAAA,WAAW,EAAE;AADP,KAD8C;;AAAA,SAKtDC,WALsD,GAKxC,MAAM;AAClB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAAEH,QAAAA,WAAW,EAAE,CAACG,SAAS,CAACH;AAA1B,OAAL,CAAvB;AACD,KAPqD;;AAAA,SAStDI,mBATsD,GAShCC,CAAC,IAAI;AACzB,UAAIA,CAAC,CAACC,aAAF,KAAoBD,CAAC,CAACE,MAA1B,EAAkC;AAChC,aAAKL,QAAL,CAAc;AAAEF,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD;AACF,KAbqD;;AAAA,SAetDQ,gBAfsD,GAenC,MAAM;AACvB,WAAKN,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KAjBqD;AAAA;;AAmBtDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA,IAAhB;AAAsBC,MAAAA;AAAtB,QAAwC,KAAKC,KAAnD;AAEA,wBACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAiC,QAAA,OAAO,EAAE,KAAKZ,WAA/C;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAwC,UAAA,GAAG,EAAES,YAA7C;AAA2D,UAAA,GAAG,EAAEC;AAAhE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,KAAKZ,KAAL,CAAWC,WAAX,iBACC,QAAC,KAAD;AACE,QAAA,IAAI,EAAEW,IADR;AAEE,QAAA,aAAa,EAAEC,aAFjB;AAGE,QAAA,mBAAmB,EAAE,KAAKR,mBAH5B;AAIE,QAAA,YAAY,EAAE,KAAKH;AAJrB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,oBADF;AAeD;;AArCqD;AAwCxDH,gBAAgB,CAACgB,SAAjB,GAA6B;AAC3BJ,EAAAA,YAAY,EAAEd,SAAS,CAACmB,MAAV,CAAiBC,UADJ;AAE3BL,EAAAA,IAAI,EAAEf,SAAS,CAACmB,MAAV,CAAiBC,UAFI;AAG3BJ,EAAAA,aAAa,EAAEhB,SAAS,CAACmB,MAAV,CAAiBC;AAHL,CAA7B","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/Modal';\n\nexport default class ImageGalleryItem extends Component {\n  state = {\n    isShowModal: false,\n  };\n\n  toogleModal = () => {\n    this.setState(prevState => ({ isShowModal: !prevState.isShowModal }));\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.setState({ isShowModal: false });\n    }\n  };\n\n  handleClickImage = () => {\n    this.setState({ isShowModal: true });\n  };\n\n  render() {\n    const { webformatURL, tags, largeImageURL } = this.props;\n\n    return (\n      <>\n        <li className='ImageGalleryItem' onClick={this.toogleModal}>\n          <img className=\"ImageGalleryItem-image\" src={webformatURL} alt={tags} />\n        </li>\n        {this.state.isShowModal && (\n          <Modal\n            tags={tags}\n            largeImageURL={largeImageURL}\n            handleBackdropClick={this.handleBackdropClick}\n            onCloseModal={this.toogleModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};"]},"metadata":{},"sourceType":"module"}